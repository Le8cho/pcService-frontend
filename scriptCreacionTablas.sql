-- CLIENTES
CREATE TABLE CLIENTES (
    ID_CLIENTE INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL,
    APELLIDO VARCHAR2(30) NOT NULL,
    CELULAR CHAR(9) NOT NULL,
    DIRECCION VARCHAR2(40),
    CORREO VARCHAR2(30)
);

-- DISPOSITIVOS
CREATE TABLE DISPOSITIVOS (
    ID_DISPOSITIVO INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    ID_CLIENTE INTEGER,
    TIPO_DISPOSITIVO VARCHAR2(20),
    MARCA VARCHAR2(20),
    MODELO VARCHAR2(20),
    CONSTRAINT FK_DISPOSITIVOS_CLIENTES FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
);

-- OPERACIONES (tabla principal)
CREATE TABLE OPERACIONES (
    ID_OPERACION INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    ID_CLIENTE INTEGER NOT NULL,
    FECHA DATE DEFAULT TRUNC(SYSDATE),
    TIPO_OPERACION VARCHAR2(20) NOT NULL, -- 'VENTA', 'MANTENIMIENTO', 'SERVICIO'
    INGRESO NUMBER(10,2),
    EGRESO NUMBER(10,2),
    CONSTRAINT FK_OPERACIONES_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID_CLIENTE)
);

-- VENTAS (hereda de OPERACIONES)
CREATE TABLE VENTAS (
    ID_OPERACION INTEGER PRIMARY KEY,
    ID_LICENCIA VARCHAR2(10) UNIQUE NOT NULL,
    CONSTRAINT FK_VENTAS_OPERACIONES FOREIGN KEY (ID_OPERACION) REFERENCES OPERACIONES(ID_OPERACION)
);

-- MANTENIMIENTOS (hereda de OPERACIONES)
CREATE TABLE MANTENIMIENTOS (
    ID_OPERACION INTEGER PRIMARY KEY,
    DESCRIPCION VARCHAR2(255),
    FRECUENCIA VARCHAR2(50),
    PROX_MANTENIMIENTO DATE,
    TIPO_MANTENIMIENTO VARCHAR2(20),
    CONSTRAINT FK_MANTENIMIENTOS_OPERACIONES FOREIGN KEY (ID_OPERACION) REFERENCES OPERACIONES(ID_OPERACION)
);

-- SERVICIOS (hereda de OPERACIONES)
CREATE TABLE SERVICIOS (
    ID_OPERACION INTEGER PRIMARY KEY,
    DETALLE_SERVICIO VARCHAR2(255),
    TECNICO_ENCARGADO VARCHAR2(50),
    DURACION_ESTIMADA VARCHAR2(20),
    CONSTRAINT FK_SERVICIOS_OPERACIONES FOREIGN KEY (ID_OPERACION) REFERENCES OPERACIONES(ID_OPERACION)
);



-- VENTA_DISPOSITIVO
CREATE TABLE VENTA_DISPOSITIVO (
    ID_VENTA_DISP INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    ID_OPERACION INTEGER,
    ID_DISPOSITIVO INTEGER,
    FOREIGN KEY (ID_OPERACION) REFERENCES VENTAS(ID_OPERACION),
    FOREIGN KEY (ID_DISPOSITIVO) REFERENCES DISPOSITIVOS(ID_DISPOSITIVO)
);

-- MANTENIMIENTO_DISPOSITIVO
CREATE TABLE MANTENIMIENTO_DISPOSITIVO (
    ID_MANTENIMIENTO_DISP INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    ID_OPERACION INTEGER,
    ID_DISPOSITIVO INTEGER,
    FOREIGN KEY (ID_OPERACION) REFERENCES MANTENIMIENTOS(ID_OPERACION),
    FOREIGN KEY (ID_DISPOSITIVO) REFERENCES DISPOSITIVOS(ID_DISPOSITIVO)
);

-- VENTAS (hereda de OPERACIONES)
CREATE TABLE VENTAS (
    ID_OPERACION INTEGER PRIMARY KEY,
    ID_LICENCIA VARCHAR2(10) UNIQUE NOT NULL,
    CONSTRAINT FK_VENTAS_OPERACIONES FOREIGN KEY (ID_OPERACION) REFERENCES OPERACIONES(ID_OPERACION)
);

-- MICROSOFT365
CREATE TABLE MICROSOFT365 (
    ID_LICENCIA VARCHAR2(10) PRIMARY KEY,
    DETALLES VARCHAR2(255),
    FEC_INICIO DATE DEFAULT TRUNC(SYSDATE),
    FECHA_FIN DATE DEFAULT TRUNC(ADD_MONTHS(SYSDATE, 1)),
    FECHA_AVISO DATE DEFAULT TRUNC(SYSDATE + 25),
    EMAIL_CTACLIE VARCHAR2(100),
    PASSW_CTACLIE VARCHAR2(100),
    NORM_M365 VARCHAR2(100),
    USER_M365 VARCHAR2(100),
    PASS_M365 VARCHAR2(100),
    FOREIGN KEY (ID_LICENCIA) REFERENCES VENTAS(ID_LICENCIA)
);

-- WINDOWS
CREATE TABLE WINDOWS (
    ID_LICENCIA VARCHAR2(10) PRIMARY KEY,
    DETALLES VARCHAR2(255),
    FEC_INICIO DATE DEFAULT TRUNC(SYSDATE),
    FECHA_FIN DATE DEFAULT TRUNC(ADD_MONTHS(SYSDATE, 1)),
    FECHA_AVISO DATE DEFAULT TRUNC(SYSDATE + 25),
    TIME_LICENCIA VARCHAR2(50),
    SO_ACTIVADO VARCHAR2(100),
    "KEY" VARCHAR2(100), -- "KEY" entre comillas dobles porque es una palabra reservada
    KEY_TIPO VARCHAR2(100),
    FOREIGN KEY (ID_LICENCIA) REFERENCES VENTAS(ID_LICENCIA)
);

-- ANTIVIRUS
CREATE TABLE ANTIVIRUS (
    ID_LICENCIA VARCHAR2(10) PRIMARY KEY,
    DETALLES VARCHAR2(255),
    FEC_INICIO DATE DEFAULT TRUNC(SYSDATE),
    FECHA_FIN DATE DEFAULT TRUNC(ADD_MONTHS(SYSDATE, 1)),
    FECHA_AVISO DATE DEFAULT TRUNC(SYSDATE + 25),
    TIME_LICENCIA VARCHAR2(50),
    NOM_ANTIVIRUS VARCHAR2(100),
    USER_ANT VARCHAR2(100),
    FOREIGN KEY (ID_LICENCIA) REFERENCES VENTAS(ID_LICENCIA)
);

-- Tablas de Autenticación --

-- USUARIOS
CREATE TABLE USUARIOS (
    ID_USUARIO INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    NOMBRE_USUARIO VARCHAR2(50) UNIQUE NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    CONTRASENA_HASH VARCHAR2(255) NOT NULL,
    NOMBRE_COMPLETO VARCHAR2(100),
    ACTIVO NUMBER(1) DEFAULT 1 NOT NULL,
    FECHA_CREACION DATE DEFAULT TRUNC(SYSDATE),
    ULTIMO_LOGIN DATE,
    CONSTRAINT CHK_USUARIOS_ACTIVO CHECK (ACTIVO IN (0,1))
);

-- ROLES
CREATE TABLE ROLES (
    ID_ROL INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    NOMBRE_ROL VARCHAR2(50) UNIQUE NOT NULL
);

-- USUARIO_ROLES (Tabla de Unión)
CREATE TABLE USUARIO_ROLES (
    ID_USUARIO INTEGER NOT NULL,
    ID_ROL INTEGER NOT NULL,
    CONSTRAINT PK_USUARIO_ROLES PRIMARY KEY (ID_USUARIO, ID_ROL),
    CONSTRAINT FK_USUARIOROLES_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    CONSTRAINT FK_USUARIOROLES_ROL FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL) ON DELETE CASCADE
);

-- TOKENS_USUARIO
CREATE TABLE TOKENS_USUARIO (
    ID_TOKEN_USUARIO INTEGER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    ID_USUARIO INTEGER NOT NULL,
    TOKEN_HASH VARCHAR2(255) UNIQUE NOT NULL,
    TIPO_TOKEN VARCHAR2(30) NOT NULL,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    FECHA_EXPIRACION TIMESTAMP NOT NULL,
    FECHA_ULTIMO_USO TIMESTAMP,
    IP_CREACION VARCHAR2(45),
    USER_AGENT_CREACION VARCHAR2(255),
    ES_REVOCADO NUMBER(1) DEFAULT 0 NOT NULL,
    CONSTRAINT FK_TOKENUSUARIO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    CONSTRAINT CHK_TOKENUSUARIO_REVOCADO CHECK (ES_REVOCADO IN (0,1))
);